#!/usr/bin/env bash

set -euo pipefail -x

# Checkout main branch
git checkout main

# Check if a date argument was provided
if [ $# -ne 1 ]; then
    echo "Usage: $0 YYYY.M.D"
    exit 1
fi

# Validate date format (simple check)
if ! [[ $1 =~ ^[0-9]{4}\.[0-9]{1,2}\.[0-9]{1,2}$ ]]; then
    echo "Error: Date must be in format YYYY.M.D"
    exit 1
fi

# Check for modified or staged files only (ignoring untracked files)
MODIFIED_FILES=$(git diff-index --quiet HEAD --; echo $?)

if [ $MODIFIED_FILES -ne 0 ]; then
    echo "Error: Working directory is not clean"
    echo "There are uncommitted changes in tracked files:"
    git status -s | grep -v "^??"
    exit 1
fi

sh ./scripts/version "$1"

MODIFIED_FILES=$(git diff-index --quiet HEAD --; echo $?)

# If there are modified files, commit them
if [ $MODIFIED_FILES -ne 0 ]; then
  git add deps.edn package.json package-lock.json pom.xml readme.md
  git commit -m "chore: Update version to $1"
fi

git tag -a "$1" -m "Prepare release $1"
git push origin main "$1"

# Ask user if they want to open the GitHub release page
read -p "Open GitHub release page? (Y/n): " open_page
if [[ "$open_page" == "" || "$open_page" == "y" || "$open_page" == "Y" ]]; then
    # Open the GitHub release creation page with the tag
    open "https://github.com/jaidetree/valhalla/releases/new?tag=$1"
fi
